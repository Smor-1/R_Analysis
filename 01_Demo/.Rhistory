print("hello world")
print(hello)
print.AsIs(hello))
install.packages(tidyverse)
install.packages(dpylr)
install.packages("tidyverse")
print(Hello)
print("Hello")
print("Hello World")
data <- read.csv("P2-Demographic-Data.csv")
data <- read.csv("P2-Demographic-Data.csv")
data <- read.csv("P2-Demographic-Data.csv")
data <- read.csv("P2-Demographic-Data.csv")
data <- read.csv("P2-Demographic-Data.csv")
read.csv(P2-Demographic-Data.csv)
read.csv("P2-Demographic-Data.csv")
read.csv("P2-Demographic-Data.csv")
directory <- ("Desktop")
directory
read.csv("P2-Demographic-Data.csv")
read.csv("P2-Demographic-Data.csv")
df <- read.csv("P2-Demographic-Data.csv")
read.csv(file = "P2-Demographic-Data.csv")
read.csv(file = "P2-Demographic-Data.csv")
read.csv("P2-Demographic-Data.csv")
P2.Demographic.Data <- read.csv("~/Desktop/P2-Demographic-Data.csv")
View(P2.Demographic.Data)
View(P2.Demographic.Data)
read.csv("P2-Demographic-Data.csv")
View(P2.Demographic.Data)
read.csv("P2-Demographic-Data.csv")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
read.csv("P2-Demographic-Data.csv")
read.csv("Sandymo/Desktop/P2-Demographic-Data.csv")
read.csv("/Users/sandymo/Desktop/P2-Demographic-Data.csv")
data <- read.csv("/Users/sandymo/Desktop/P2-Demographic-Data.csv")
data
head(data)
data <- read.csv("P2-Demographic-Data.csv")
str(data)
table(data$Income.Group)
levels(data$Income.Group)
levels(data$Income.Group)
data[1,5,]
data[1:5,]
filter(data , Birth.Rate > 20)
filter(data , Birth.rate > 20)
filter(data,Birth.rate > 20)
filter(data,Birth.rate < 20)
head(data)
filter(data,Birth.rate > 20)
filter(data , Birth.rate < 20)
data[1:5,]
Filter(data , Birth.rate > 20)
filter(data , Birth.rate > 20)
filter(data , Birth.rate > 20)
filter(data , Internet.users > 50)
head(data)
data <- read.csv("/Users/sandymo/Desktop/P2-Demographic-Data.csv" , header = TRUE)
head(data)
filter(data , Birth.rate > 20)
data <- read.csv("/Users/sandymo/Desktop/P2-Demographic-Data.csv")
table(data$Income.Group)
table(data$Income.Group)
#way to select the first 5 values from the internet.users column
data$Birth.rate[3]
#also a way to select the first 5 values from a column
data[1:5,]
levels(data$Income.Group)
filter(data , Birth.rate < 20)
subset(data , Birth.rate > 20 , c("Birth.rate" , "Country.Name"))
filter(data , Income.Group == "High income")
subset(data , Income.Group == "High income")
subset(data , Birth.rate > 20)
pl <- ggplot(data , aes(x = Birth.rate))
install.packages("ggplot2")
pl <- ggplot(data , aes(x = Birth.rate))
library(ggplot2)
pl <- ggplot(data , aes(x = Birth.rate))
pl + geom_bar()
pl + geom_histogram()
data <- "hello"
install.packages("tidyverse")
install.packages("jsonlite")
setwd("/Users/sandymo/Desktop/R_Analysis")
setwd("~/Desktop/R_Analysis/01_Demo")
x <- 3
y <- 2
x * y
x <- 5
numlist <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
numlist[0:5]
?read.csv
df = read.csv(demo.csv)
df = read.csv("demo.csv")
df
table(df)
df = read.csv("demo.csv")
df
df
library(jsonlite)
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
detach("package:jsonlite", unload = TRUE)
library(jsonlite)
csv_df <- read.csv('demo.csv',check.names=F,stringsAsFactors = F)
csv_df
json_df <- fromJSON(txt = "demo.json")
json_df
numlist <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
numlist[0:5]
numlist[3]
csv_df
csv_df[3]
csv_df[3, "Year"]
csv_df[, "Year"]
csv_df[3, "Year"]
csv_df[3,]
csv_df[3]
csv_df[3,]
#
csv_df[3,"Year"]
#
csv_df["Year"]
#also year col
csv_df$Year
#also year col
csv_df$"Year"
#also year col
csv_df$Year
json_df
json_df[json_df$price > 10000]
json_df[json_df$price > 10000,]
filtered_df <- json_df[json_df$price > 10000,]
filter_table2 <- subset(json_df, price > 10000 & drive == "4wd" & "clean" %in% title_status)
View(filter_table2)
View(filtered_df)
sampled_df = sample(csv_df, 4)
View(sampled_df)
sample(csv_df, 4)
sample(csv_df, 4)
sample(csv_df, 4)
#inside tidyverse is ggplot2, tidyr and dplyr
library(tidyverse)
?mutate
#add cols to OG df:
csv_df <- csv_df %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE) #add columns to original data frame
csv_df
#add cols to OG df:
csv_df <- csv_df %>% mutate(Mileage_per_Year=Total_Miles/(2023-Year),IsActive=TRUE)
csv_df
json_df
json_df %>% group_by(condition)
json_df %>% group_by(condition) summarize(Mean_Mileage=mean(odometer), .groups = 'keep')
json_df %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep')
json_df %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer),Maximum_Price=max(price),Num_Vehicles=n(), .groups = 'keep')
csv_df
csv_df %>% csv_df[1]
csv_df %>% csv_df$Year
?select()
csv_df %>% select(Name)
myDF
myDF <- read.csv("demo2.csv")
myDF
View(myDF)
long_table <- gather(myDF,key="Metric",value="Score",buying_price:popularity)
View(long_table)
wide_table <- long_table %>% spread(key="Metric",value="Score")
View(wide_table)
df <- mtcars
df
head(df)
head(mpg)
df <- mpg
head(df)
plt <- ggplot(df, aes(x = class))
plt + geom_bar()
plt <- ggplot(df, aes(x = fct_infreq(class)))
plt + geom_bar()
plt <- ggplot(df, aes(x = fct_infreq(manufacturer)))
plt + geom_bar()
plt <- ggplot(df, aes(x = fct_infreq(class)))
plt + geom_bar()
mpg_vehicle_count <- df %>% group_by(manufacturer)
mpg_vehicle_count
mpg_vehicle_count <- df %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep')
mpg_vehicle_count
df
mpg_vehicle_count
plt2 <- ggplot(mpg_vehicle_count, aes(x = manufacturer, y = Vehicle_Count)
plt2 <- ggplot(mpg_vehicle_count, aes(x = manufacturer, y = Vehicle_Count))
plt2 <- ggplot(mpg_vehicle_count, aes(x = manufacturer, y = Vehicle_Count))
plt2 + geom_col()
plt2 <- ggplot(mpg_vehicle_count, aes(x = fct_infreq(manufacturer), y = Vehicle_Count))
plt2 + geom_col()
plt2 <- ggplot(mpg_vehicle_count, aes(x = manufacturer, y = Vehicle_Count))
plt2 + geom_col()
plt2 <- ggplot(mpg_vehicle_count, aes(x = fct_infreq(manufacturer), y = Vehicle_Count))
plt2 + geom_col()
plt2 <- ggplot(mpg_vehicle_count, aes(x = fct_infreq(manufacturer), y = fct_infreq(Vehicle_Count)))
plt2 + geom_col()
plt2 <- ggplot(mpg_vehicle_count, aes(x = manufacturer, y = fct_infreq(Vehicle_Count)))
plt2 + geom_col()
plt2 <- ggplot(mpg_vehicle_count, aes(x = manufacturer, y = Vehicle_Count))
plt2 + geom_col()
mpg_vehicle_count <- df %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') %>% order(price)
mpg_vehicle_count <- df %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') %>% order(Vehicle_Count)
mpg_vehicle_count <- df %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') %>% arrange(Vehicle_Count)
mpg_vehicle_count
mpg_vehicle_count <- df %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') %>% arrange(desc(Vehicle_Count))
mpg_vehicle_count
plt2 <- ggplot(mpg_vehicle_count, aes(x = manufacturer, y = Vehicle_Count))
plt2 + geom_col()
mpg_vehicle_count
plt2 <- ggplot(mpg_vehicle_count, aes(x = manufacturer, y = Vehicle_Count))
plt2 + geom_col()
mpg_vehicle_counted <- df %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') %>% arrange(desc(Vehicle_Count))
mpg_vehicle_counted
plt2 <- ggplot(mpg_vehicle_counted, aes(x = manufacturer, y = Vehicle_Count))
plt2 + geom_col()
plt2 + geom_col()
mpg_vehicle_count <- df %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') %>% arrange(desc(Vehicle_Count))
mpg_vehicle_count
plt2 <- ggplot(mpg_vehicle_count, aes(x = manufacturer, y = Vehicle_Count))
plt2 + geom_col()
plt2 + geom_col() + xlab("HELLO")
plt2 + geom_col() + xlab("HELLO") + ylab("ALSO HELLO")
plt2 + geom_col() + xlab("HELLO") + ylab("ALSO HELLO") + theme(axis.text.x=element_text(angle=45, hjust=1))
plt2 <- ggplot(mpg_vehicle_count, aes(x = fct_reorder(manufacturer, Vehicle_Count), y = Vehicle_Count))
plt2 + geom_col() + xlab("HELLO") + ylab("ALSO HELLO") + theme(axis.text.x=element_text(angle=45, hjust=1))
plt2 <- ggplot(mpg_vehicle_count, aes(x = fct_rev(fct_reorder(manufacturer, Vehicle_Count)), y = Vehicle_Count))
plt2 + geom_col() + xlab("HELLO") + ylab("ALSO HELLO") + theme(axis.text.x=element_text(angle=45, hjust=1))
mpg_mean_highway <- subset(df,manufacturer=="toyota")
mpg_mean_highway
mpg_mean_highway <- subset(df,manufacturer=="toyota") %>% group_by(cyl)
mpg_mean_highway
mpg_mean_highway <- subset(df,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')
mpg_mean_highway
plt3 <- ggplot(mpg_mean_highway, aes(x=cyl , y=Mean_Hwy))
plt3 + geom_line()
plt3 + geom_line() + scale_x_discrete(limits=c(4,6,8))
plt3 + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks=c(16:30))
plt3 + geom_line() + scale_x_discrete(limits=c(4,6,8))
plt3 + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks=c(16:30))
plt4 <- ggplot(df, aes(x=displ,y=cty))
plt4 + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency (MPG)")
plt4 <- ggplot(df, aes(x=displ,y=cty , color=class))
plt4 + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency (MPG)")
plt4 + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class")
plt4 + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class!")
plt4 <- ggplot(df, aes(x=displ,y=cty , color=class, shape = drv))
plt4 + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class!")
plt4 + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class!", shape = "Drive Type")
plt5 <- ggplot(df, aes(y=hwy))
plt5 + geom_boxplot()
plt5 <- ggplot(df, aes(x = manufacturer, y=hwy))
plt5 + geom_boxplot()
plt5 + geom_boxplot() + theme(axis.text.x=element_text(angle=45, hjust=1)
plt5 + geom_boxplot() + theme(axis.text.x=element_text(angle=45, hjust=1))
plt5 <- ggplot(df, aes(x = manufacturer, y=hwy))
plt5 + geom_boxplot() + theme(axis.text.x=element_text(angle=45, hjust=1))
plt5 <- ggplot(df, aes(x = reorder(manufacturer , -hwy), y=hwy))
plt5 + geom_boxplot() + theme(axis.text.x=element_text(angle=45, hjust=1))
plt5 + geom_boxplot() + labs(x = "Manufacturer" , y="Highway Fuel Efficiency") theme(axis.text.x=element_text(angle=45, hjust=1))
plt5 + geom_boxplot() + labs(x = "Manufacturer" , y="Highway Fuel Efficiency")) + theme(axis.text.x=element_text(angle=45, hjust=1))
plt5 <- ggplot(df, aes(x = reorder(manufacturer , -hwy), y=hwy))
plt5 + geom_boxplot() + labs(x = "Manufacturer" , y="Highway Fuel Efficiency")) + theme(axis.text.x=element_text(angle=45, hjust=1))
plt5 + geom_boxplot() + labs(x = "Manufacturer" , y="Highway Fuel Efficiency") + theme(axis.text.x=element_text(angle=45, hjust=1))
plt5 + geom_boxplot(fill = "white" , color = "blue") + labs(x = "Manufacturer" , y="Highway Fuel Efficiency") + theme(axis.text.x=element_text(angle=45, hjust=1))
plt5 + geom_boxplot(fill = "white" , color = "blue" , outlier.colour = "red") + labs(x = "Manufacturer" , y="Highway Fuel Efficiency") + theme(axis.text.x=element_text(angle=45, hjust=1))
plt5 + geom_boxplot(lty = 2, fill = "white" , color = "blue" , outlier.colour = "red") + labs(x = "Manufacturer" , y="Highway Fuel Efficiency") + theme(axis.text.x=element_text(angle=45, hjust=1))
plt5 + geom_boxplot(lty = 1, fill = "white" , color = "blue" , outlier.colour = "red") + labs(x = "Manufacturer" , y="Highway Fuel Efficiency") + theme(axis.text.x=element_text(angle=45, hjust=1))
plt5 + geom_boxplot(lty = 1, fill = "white" , color = "blue" , outlier.colour = "red") + labs(x = "Manufacturer" , y="Highway Fuel Efficiency") + theme(axis.text.x=element_text(angle=45, hjust=1)) + geom_point()
plt4 <- ggplot(df, aes(x=displ,y=cty , color=class, shape = drv))
plt4 + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class!", shape = "Drive Type")
plt5 + geom_boxplot(lty = 1, fill = "white" , color = "blue" , outlier.colour = "red") + labs(x = "Manufacturer" , y="Highway Fuel Efficiency") + theme(axis.text.x=element_text(angle=45, hjust=1)) + geom_point()
plt5 <- ggplot(df, aes(x = reorder(manufacturer , -hwy), y=(hwy, cty)))
plt5 <- ggplot(df, aes(x = reorder(manufacturer , -hwy), y=(hwy))
plt5 <- ggplot(df, aes(x = reorder(manufacturer , -hwy), y=(hwy))
plt5 <- ggplot(df, aes(x = reorder(manufacturer , -hwy), y=(hwy)))
plt5 + geom_boxplot(lty = 1, fill = "white" , color = "blue" , outlier.colour = "red") + labs(x = "Manufacturer" , y="Highway Fuel Efficiency") + theme(axis.text.x=element_text(angle=45, hjust=1)) + geom_point()
both_mpgs <- df %>% gather(key="MPG_Type",value="Rating",c(cty,hwy))
both_mpgs
View(both_mpgs)
plt6 <- ggplot(both_mpgs, aes(x = manufacturer, y = Rating))
plt6 + geom_boxplot()
plt6 <- ggplot(both_mpgs, aes(x = manufacturer, y = Rating, color=MPG_Type))
plt6 + geom_boxplot()
plt6 + geom_boxplot() + theme(axis.text.x=element_text(angle=45, hjust=1))
View(df)
plt6 <- ggplot(both_mpgs, aes(x = reorder(manufacturer, -Rating), y = Rating, color=MPG_Type))
plt6 + geom_boxplot() + theme(axis.text.x=element_text(angle=45, hjust=1))
View(df)
View(both_mpgs)
plt6 + geom_boxplot() + facet_wrap(vars(MPG_Type)) + theme(axis.text.x=element_text(angle=45, hjust=1))
plt6 + geom_boxplot() + facet_wrap(vars(MPG_Type)) + theme(axis.text.x=element_text(angle=45, hjust=1)) + labs(x = "Manufacturer")
head(mtcars)
plt7 <- ggplot(mtcars, aes(x = wt))
plt7 + geom_point()
library(tidyverse)
head(mtcars)
plt7 <- ggplot(mtcars, aes(x = wt))
plt7 + geom_point()
plt7 + geom_density()
#checking for normality above qualitatively and below quantitatively
shapiro.test(mtcars$wt)
sample_n(mtcars, 5)
sample_n(mtcars, 10)
data <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F)
head(data)
table(data)
plt8 <- ggplot(data,aes(x=log10(Miles_Driven)))
plt8 + geom_density()
t.test(log10(sample_n(data, 50)$Miles_Driven),mu=mean(log10(population_table$Miles_Driven)))
t.test(log10(sample_n(data, 50)$Miles_Driven),mu=mean(log10(data$Miles_Driven)))
sample_1 <- sample_n(data, 50)
sample_2 <- sample_n(data, 50)
#two sample t-test:
t.test(log10(sample_1%Miles_Driven), log10(sample_2$Miles_Driven))
#two sample t-test:
t.test(log10(sample_1$Miles_Driven), log10(sample_2$Miles_Driven))
#pair t test, like fuel efficiency before/after oil change, compare 2 samples from different pop
my_data <- read.csv("mpg_modified.csv")
data_1999 <- my_data %>% subset(my_data, year == 1999)
data_1999 <- my_data %>% subset(year == 1999)
head(data_1999)
data_2008 <- my_data %>% filter(year == 2008)
t.test(data_1999$hwy, data_2008%hwy, paired = T)
t.test(data_1999$hwy, data_2008$hwy, paired = T)
mtcars_filt <- mtcars[,c("hp","cyl")] #filter columns from mtcars dataset
mtcars_filt$cyl <- factor(mtcars_filt$cyl) #convert numeric column to factor
mtcars_filt
aov(hp ~ cyl,data=mtcars_filt) #compare means across multiple levels
summary(aov(hp ~ cyl,data=mtcars_filt)) #compare means across multiple levels
plt9 <- ggplot(mtcars, aes(x = mpg, y = wt))
plt9 + geom_point()
cor(mtcars$mpg, mtcars$wt)
#returns back -0.87 so good chance that with higher mpg it is a lighter car
head(mtcars)
a_matrix <- as.matrix(mtcars[,c("mpg" , "wt" , "hp")])
a_matrix
cor(a_matrix)
lm(qsec ~ hp,mtcars) #create linear model
summary(lm(qsec ~ hp,mtcars)) #create linear model
model <- lm(qsec ~ hp,mtcars) #create linear model
#doing y = mx + b below
yvals <- model$coefficients['hp']*mtcars$hp + model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt10 <- ggplot(mtcars,aes(x=hp,y=qsec))
plt10 + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
plt10 + geom_point() + geom_line(aes(y=yvals), color = "purple") #plot scatter and linear model
#with multiple lin reg, no longer y = mx + b, but y = m1x1 + m2x2 .... + b
lm(qsec ~ mpg + wt + hp,data=mtcars) #generate multiple linear regression model
#with multiple lin reg, no longer y = mx + b, but y = m1x1 + m2x2 .... + b
summary(lm(qsec ~ mpg + wt + hp,data=mtcars)) #generate multiple linear regression model
